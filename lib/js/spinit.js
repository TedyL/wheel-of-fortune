!function(a){function c(a,b){return Math.floor(Math.random()*(b-a+1)+a)}var d={instance:{},angles:{},defaults:{clockwise:!0,startDegree:0,turn:7,radius:20,duration:6e3,transition:"cubic-bezier(.25,0,.17,1)"},options:{},setAngle:function(){a(d.instance).children("*").each(function(b,c){"undefined"!=typeof a(c).data("spinit-start")&&"undefined"!=typeof a(c).data("spinit-end")&&"undefined"!=typeof a(c).data("spinit-id")&&(d.angles[a(c).data("spinit-id")]={start:a(c).data("spinit-start"),end:a(c).data("spinit-end")})})},getAngle:function(a){return"undefined"!=typeof d.angles[String(a)]&&null!=d.angles[String(a)]?d.angles[String(a)]:!1},initLayout:function(){d.options.clockwise?a(d.instance).css({rotate:"-="+d.options.startDegree}):a(d.instance).css({rotate:"+="+d.options.startDegree})},algorithm:function(a){var b=c(parseInt(d.getAngle(a).start)+d.options.radius,parseInt(d.getAngle(a).end)-d.options.radius);if(d.options.clockwise)var e=360*d.options.turn-b;else var e=-(360*d.options.turn)-b;return e},spin:function(b,c){function e(){a(d.instance).transition({rotate:"0deg"},0,"ease")}e(),"undefined"!=typeof d.angles[String(b)]&&null!=d.angles[String(b)]?a(this).transition({rotate:String(d.algorithm(b))+"deg"},d.options.duration,d.options.transition,function(){console.log("finish spinning"),c()}):console.log("Invalid room id detected")},init:function(b){d.instance=this,d.options=a.extend(d.defaults,b),d.setAngle(),d.initLayout()}};a.fn.spinit=function(b,c){return d[b]?d[b].apply(this,Array.prototype.slice.call(arguments,1),c):"object"!=typeof b&&b?void a.error("Method "+b+" doesn't exist on jQuery spintit"):d.init.apply(this,arguments)}}(jQuery);